# Generated by Django 3.2.16 on 2023-04-26 14:02

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='animals/')),
                ('dob', models.DateField(blank=True, null=True)),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('expired', 'Expired'), ('sold', 'Sold')], default='active', max_length=10, null=True)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='AnimalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(default='', editable=False, unique=True)),
                ('category_image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genetics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MilkRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('first_time', models.DecimalField(decimal_places=2, max_digits=5)),
                ('second_time', models.DecimalField(decimal_places=2, max_digits=5)),
                ('third_time', models.DecimalField(decimal_places=2, max_digits=5)),
                ('animal', models.ForeignKey(limit_choices_to={'sex': 'Female'}, on_delete=django.db.models.deletion.CASCADE, to='dairy_farm.animal')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, null=True, upload_to='members/')),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('job_title', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='dairy_farm_member_groups', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='dairy_farm_member_user_permissions', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FarmMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy_farm.farm')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy_farm.member')),
            ],
            options={
                'unique_together': {('user', 'farm')},
            },
        ),
        migrations.AddField(
            model_name='farm',
            name='members',
            field=models.ManyToManyField(through='dairy_farm.FarmMember', to='dairy_farm.Member'),
        ),
        migrations.CreateModel(
            name='AnimalWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=6)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy_farm.animal')),
            ],
        ),
        migrations.CreateModel(
            name='AnimalRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(choices=[('mother', 'Mother'), ('father', 'Father'), ('child', 'Child')], max_length=50)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='dairy_farm.animal')),
                ('related_animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_animals', to='dairy_farm.animal')),
            ],
        ),
        migrations.AddField(
            model_name='animal',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy_farm.animalcategory'),
        ),
        migrations.AddField(
            model_name='animal',
            name='farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animals', to='accounts.farm'),
        ),
        migrations.AddField(
            model_name='animal',
            name='father',
            field=models.ForeignKey(blank=True, limit_choices_to={'sex': 'Male'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_father', to='dairy_farm.animal'),
        ),
        migrations.AddField(
            model_name='animal',
            name='mother',
            field=models.ForeignKey(blank=True, limit_choices_to={'sex': 'Female'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_mother', to='dairy_farm.animal'),
        ),
    ]
